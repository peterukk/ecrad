GPTL version info: 8.0.2
GPTL was built without threading
HAVE_LIBMPI was false
HAVE_PAPI was true
  PAPI event multiplexing was OFF
Description of printed events (PAPI and derived):
  SP operations
  

PAPI events enabled (including those required for derived events):
  PAPI_SP_OPS

ENABLE_NESTEDOMP was false
Autoprofiling capability was enabled with backtrace
Underlying timing routine was gettimeofday.
GPTLget_overhead: using hash entry 224=ecrad_total for getentry estimate
Total overhead of 1 GPTL start or GPTLstop call=7.4e-08 seconds
Components are as follows:
Fortran layer:             1.0e-09 =   1.4% of total
Get thread number:         3.0e-09 =   4.1% of total
Generate hash index:       5.0e-09 =   6.8% of total
Find hashtable entry:      6.0e-09 =   8.1% of total
Underlying timing routine: 2.9e-08 =  39.2% of total
Misc start/stop functions: 2.0e-09 =   2.7% of total
Read PAPI counters:        2.8e-08 =  37.8% of total

Overhead of backtrace (invoked once per auto-instrumented start entry)=2.641e-06 seconds
NOTE: If GPTL is called from C not Fortran, the 'Fortran layer' overhead is zero
NOTE: For calls to GPTLstart_handle()/GPTLstop_handle(), the 'Generate hash index' overhead is zero
NOTE: For auto-instrumented calls, the cost of generating the hash index plus finding
      the hashtable entry is 0.0e+00 not the 1.1e-08 portion taken by GPTLstart
NOTE: Each hash collision roughly doubles the 'Find hashtable entry' cost of that timer

If overhead stats are printed, they are the columns labeled self_OH and parent_OH
self_OH is estimated as 2X the Fortran layer cost (start+stop) plust the cost of 
a single call to the underlying timing routine.
parent_OH is the overhead for the named timer which is subsumed into its parent.
It is estimated as the cost of a single GPTLstart()/GPTLstop() pair.
Print method was most_frequent.

If a '%_of' field is present, it is w.r.t. the first timer for thread 0.
If a 'e6_per_sec' field is present, it is in millions of PAPI counts per sec.

A '*' in column 1 below means the timer had multiple parents, though the values
printed are for all calls. Multiple parent stats appear later in the file in the
section titled 'Multiple parent info'
A '!' in column 1 means the timer is currently ON and the printed timings are only
valid as of the previous GPTLstop. '!' overrides '*' if the region had multiple
parents and was currently ON.

Process size=149.332031 MB rss=19.820312 MB

Stats for thread 0:
                          Called  Recurse     Wall      max      min %_of_ecra   SP_OPS e6_/_sec
  ecrad_total                  1     -    7.13e-03 7.13e-03 7.13e-03   100.00    76863    10.78
    read_inputs_blocked        1     -    2.40e-04 2.40e-04 2.40e-04     3.37       36     0.15
    setup_radiation            1     -    7.39e-04 7.39e-04 7.39e-04    10.36      454     0.61
    radiation                  1     -    5.02e-03 5.02e-03 5.02e-03    70.40        0     0.00
    write_outputs              1     -    1.84e-04 1.84e-04 1.84e-04     2.58        0     0.00
Overhead sum =   7.3e-07 wallclock seconds
Total calls  = 5

Stats for thread 1:
            Called  Recurse     Wall      max      min %_of_ecra   SP_OPS e6_/_sec
Overhead sum =         0 wallclock seconds
Total calls  = 0

Stats for thread 2:
            Called  Recurse     Wall      max      min %_of_ecra   SP_OPS e6_/_sec
Overhead sum =         0 wallclock seconds
Total calls  = 0

Stats for thread 3:
                        Called  Recurse     Wall      max      min %_of_ecra   SP_OPS e6_/_sec
  gas_optics                 1     -    6.95e-04 6.95e-04 6.95e-04     9.74 6.80e+06  9788.27
  clouds                     1     -    0.00e+00 0.00e+00 0.00e+00     0.00        0     0.00
  aerosols                   1     -    1.36e-04 1.36e-04 1.36e-04     1.91        0     0.00
  save_rad_prop              1     -    2.76e-03 2.76e-03 2.76e-03    38.70     1350     0.49
  cloudless_solver_lw        1     -    1.16e-03 1.16e-03 1.16e-03    16.21 3.99e+06  3448.52
Overhead sum =   7.3e-07 wallclock seconds
Total calls  = 5

Stats for thread 4:
            Called  Recurse     Wall      max      min %_of_ecra   SP_OPS e6_/_sec
Overhead sum =         0 wallclock seconds
Total calls  = 0

Stats for thread 5:
            Called  Recurse     Wall      max      min %_of_ecra   SP_OPS e6_/_sec
Overhead sum =         0 wallclock seconds
Total calls  = 0

Same stats sorted by timer for threaded regions:
Thd    Called  Recurse     Wall      max      min %_of_ecra    SP_OPS e6_/_sec
thread 0 long name translations (empty when no auto-instrumentation):
thread 1 long name translations (empty when no auto-instrumentation):
thread 2 long name translations (empty when no auto-instrumentation):
thread 3 long name translations (empty when no auto-instrumentation):
thread 4 long name translations (empty when no auto-instrumentation):
thread 5 long name translations (empty when no auto-instrumentation):

Total GPTL memory usage = 107.184 KB
Components:
Hashmem                 = 98.288 KB
Regionmem               = 2.64 KB (papimem portion = 0.48 KB)
Parent/child arrays     = 0.112 KB
Callstackmem            = 6.144 KB

Thread mapping:
GPTLthreadid[0] = 0
GPTLthreadid[1] = -1
GPTLthreadid[2] = -1
GPTLthreadid[3] = 3
GPTLthreadid[4] = -1
GPTLthreadid[5] = -1
